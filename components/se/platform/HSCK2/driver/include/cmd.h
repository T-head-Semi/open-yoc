#ifndef __CMD__
#define __CMD__

#include "HSSDF.h"
//---------接口如下----------------------------------
//***下载固件初始化                 测试通过√
//***下载固件                       测试通过√
//***固件升级结束验签、激活APP      测试通过√
//***读取app固件版本号，            测试通过√
//***获取任意长度随机数，           测试通过√
//***通信通道测试指令，             测试通过√
//***外部认证，                     测试通过√
//***
//***导入密钥，导入根密钥通过√，导入密钥加密密钥通过√，导入ECC密钥通过√，导入RSA1024密钥通过√，导入RSA2048密钥通过√，导入AES密钥通过√
//***导出密钥                   导出rsa密钥测试通过√
//***
//***生成ECC密钥对，                测试通过√
//***ECC加密，                      测试通过√
//***ECC解密，                      测试通过√
//***ECC签名，                      测试通过√
//***ECC验签，                      测试通过√
//***
//***生成RSA密钥对                  测试通过√
//***RSA加密                        测试通过√
//***RSA解密                        测试通过√
//***RSA签名                        测试通过√
//***RSA验签                        测试通过√
//***
//***AES加密                        测试通过√             
//***AES解密                        测试通过√
//***
//***获取安全存储空间大小           测试通过√
//***写用户信息命令                 测试通过√
//***读用户信息命令                 测试通过√

//***hash运算初始化                 测试通过√
//***hash运算                       测试通过√
//***hash运算结束                   测试通过√

//***hmac运算初始化,设置密钥        测试通过√
//***hmac运算                       测试通过√
//
//
//
//
//-------------------------------------------------


//-------------------------------------------------
/*
下载固件前的初始化
描述：
    不存在数据。该指令主要是将SE回到二级Boot状态下，并在cos内部做一些算法初始化，
    例如加载AES密钥值和IV值，以及HASH算法SHA256初始化。
参数:
    无
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_Initialization_before_downloading_firmware (void);

//-------------------------------------------------
/*
下载固件
描述：
    数据域为固件内容。每次下载的固件内容是512字节的整数倍。最后一包为512字节的整数倍+64字节.
    所有的固件数据通过这一步进行下载。
    固件升级结束验签
参数:
    EncBin      输入，下载的固件内容，长度为512字节的整数倍  或者 512字节的整数倍+64字节
    EncBinLen   输入，下载的固件内容长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_downloading_firmware (const SGD_UCHAR *EncBin, SGD_UINT32 EncBinLen);


//-------------------------------------------------
/*
激活APP
描述：
    激活APP。
参数:
    无
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_Activate_the_app (void);


//-------------------------------------------------
/*
读取app固件版本号
描述：
    读取app固件版本号
参数:
     pOutVersion    输出，获取的版本号
	 pulRandLen     输出，获取的版本号长度，2字节
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_GetAppVersion( SGD_UINT8* pOutVersion, SGD_UINT32 *pulVersiondLen);

//-------------------------------------------------
/*
获取任意长度随机数
描述：
    获取任意长度字节随机数
参数:
    Len                 输入，要获取的随机数长度
    data			输出，缓冲区指针，用于存放获取的随机数，分配空间不能小于要获取的随机数长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_rng_get_bytes(SGD_UINT32 len, SGD_UCHAR *data);



//-------------------------------------------------
/*
通信通道测试指令
描述：
    用于测试SPI通信稳定性。
参数:
    pucInData 下发的4字节整数倍（最大长度4K）的随机数
    uiInDataLen 下发数据的长度
    pucOutData 返回的同等长度的随机数
    puiOutDataLength 返回数据的长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_SpiChannelTest(void);


//-------------------------------------------------
/*
外部认证
描述：
    通过调用此接口获取相应的权限。
参数:
	rootkey		输入,16字节根密钥
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_ExternalAuth(SGD_UCHAR* rootkey);

//-------------------------------------------------
/*
导入密钥
描述:
    用于导入根密钥、密钥加密密钥、ECC密钥、RSA1024密钥、RSA2048密钥对、AES密钥
参数:
    key_type                        输入，取值：0x01 = 导入根密钥，0x02 = 导入密钥加密密钥，0x03 = 导入ECC密钥，
                                                0x04 = 导入RSA1024密钥，0x05 = 导入RSA2048密钥，0x06 = 导入AES密钥
    rootkey                         输入，16字节的根密钥，导入ECC密钥、RSA1024密钥、RSA2048密钥、AES密钥时，此参数忽略.
    key_encrypting_key_KeyIndex     输入，要使用的sm4密钥加密密钥索引，导入根密钥和密钥加密密钥时，此参数忽略。
    key_encrypting_key              输入，要使用的sm4密钥加密密钥，导入根密钥和密钥加密密钥时，此参数忽略。
	KeyIndex			            输入，要导入的密钥索引
    Key			                    输入，要导入的密钥
    Len                             输入，要导入的密钥长度
    Keyformat                       输入，要导入的RSA1024密钥和RSA2048密钥格式，导入除RSA1024密钥、RSA2048密钥外的其他密钥时，此参数忽略。
                                            0x10 = 仅公钥存在，0x11 = ND格式密钥对，0x12 = CRT格式密钥对，0x01 = 仅私钥D存在，0x02 = 仅CRT格式私钥存在

返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_Import_Key(SGD_UINT32 key_type, SGD_UCHAR *rootkey, SGD_UINT32 key_encrypting_key_KeyIndex, SGD_UCHAR *key_encrypting_key, SGD_UINT32 KeyIndex, SGD_UCHAR *Key, SGD_UINT32 Len, SGD_UINT32 Keyformat);

/*
导出密钥
描述:
    用于导出ECC公钥、RSA1024公钥、RSA2048公钥
参数:
    key_type                        输入，取值：0x01 = 导出ECC密钥，0x02 = 导出RSA1024密钥，0x03 = 导出RSA2048密钥
	KeyIndex			            输入，要导出的密钥索引
    Key			                    输出，导出的密钥
    Len                             输出，导出的密钥长度

返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_export_Key(SGD_UINT32 key_type, SGD_UINT32 KeyIndex, SGD_UCHAR *Key, SGD_UINT32 *Len);


//-------------------------------------------------
/*
AES加密
参数:
    mode                输入,加密模式，取值：0x01 = ECB模式，0x02 = CBC模式
    key_flag            输入,使用内部密钥，还是随加密指令导入密钥，取值：0x01 = 使用内部密钥，0x02 = 随指令导入密钥
    ivdata              输入,mode = 0x02 ，CBC模式下，需要导入的初始向量iv，iv长度为16字节。ECB模式时此参数可忽略
	KeyIndex			输入,AES密钥索引值.取值0x01~0x10。当随加密指令导入密钥时，此参数可忽略。
    Key                 输入,随加密指令导入的密钥值。
    Keylen              输入,随加密指令导入的密钥长度，取值为16，24，32。当使用内部密钥时，此参数可忽略
	Data			    输入,待加密的数据。当使用内部密钥时，此参数可忽略
    DataLen		        输入,待加密的数据长度
	EncData				输出,加密后的数据
	EncDataLen		    输出,加密后的数据长度.

返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_AES_Encrypt(SGD_UINT32 mode,SGD_UINT32 key_flag, SGD_UCHAR *ivdata, SGD_UINT32 KeyIndex, SGD_UCHAR *Key, SGD_UINT32 Keylen, SGD_UCHAR *Data,SGD_UINT32 DataLen, SGD_UCHAR *EncData, SGD_UINT32 *EncDataLen);

//-------------------------------------------------
/*
AES解密
参数:
	参数:
    mode                输入,解密模式，取值：0x01 = ECB模式，0x02 = CBC模式
    key_flag            输入,使用内部密钥，还是随解密指令导入密钥，取值：0x01 = 使用内部密钥，0x02 = 随指令导入密钥
    ivdata              输入,mode = 0x02 ，CBC模式下，需要导入的初始向量iv，iv长度为16字节，ECB模式时此参数可忽略
	KeyIndex			输入,AES密钥索引值.取值0x01~0x10，当随解密指令导入密钥时，此参数可忽略。
    Key                 输入,随解密指令导入的密钥值。当使用内部密钥时，此参数可忽略
    Keylen              输入,随解密指令导入的密钥长度，取值为16，24，32。当使用内部密钥时，此参数可忽略
	EncData			    输入,待解密的数据
    EncDataLen		    输入,待解密的数据长度
	DecData				输出,解密后的数据
	DecDataLen		    输出,解密后的数据长度.

返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_AES_Decrypt(SGD_UINT32 mode, SGD_UINT32 key_flag, SGD_UCHAR *ivdata, SGD_UINT32 KeyIndex, SGD_UCHAR *Key, SGD_UINT32 Keylen, SGD_UCHAR *EncData,SGD_UINT32 EncDataLen, SGD_UCHAR *DecData, SGD_UINT32 *DecDataLen);
	
    

//-------------------------------------------------
/*
生成ECC密钥对
描述:
    用于生成 ECC 密钥对。 
    命令执行时，若指定 KID 的密钥对存在，则生成的密钥对内容将覆盖已存在密钥对的值。
参数:
	KeyIndex			输入,指定产生ECC密钥对的密钥索引,取值范围1~16。 
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_GenerateECCKeyPair(SGD_UINT32 KeyIndex);

//-------------------------------------------------
/*
ECC加密
参数:
	KeyIndex			输入,ECC密钥索引值.取值0x01~0x10.需保证索引值对应位置已存在密钥.
	Data				输入,要加密的数据，必须为16字节整数倍，长度范围16-1024（十进制）字节。
	DataLength		    输入,要加密的数据的长度
	EncData			    输出,加密后的数据.
    EncDataLength		输出,加密后的数据长度
返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_ECC_Encrypt(SGD_UINT32 KeyIndex, SGD_UCHAR *Data, SGD_UINT32 DataLength, SGD_UCHAR *EncData, SGD_UINT32 *EncDataLength);

//-------------------------------------------------
/*
ECC解密
参数:
	参数:
	KeyIndex			输入,ECC密钥索引值.取值0x01~0x10.需保证索引值对应位置已存在密钥.
	EncData			    输入,要解密的数据
    EncDataLength		输入,要解密的数据长度
	DecData				输出,解密后的数据
	DecDataLength		输出,解密后的数据长度.

返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_ECC_Decrypt(SGD_UINT32 KeyIndex, SGD_UCHAR *EncData, SGD_UINT32 EncDataLength, SGD_UCHAR *DecData, SGD_UINT32 *DecDataLength);
	
//-------------------------------------------------
/*
ECC签名
描述:使用内部ECC私钥对数据进行签名运算
参数:
	KeyIndex			输入,ECC密钥索引值，取值0x01~0x10.需保证索引值对应位置已存在密钥.
	HashFlag			输入,Hash标志，取值0x01或0x00; 为0x01表示输入数据pucDataInput为待签名数据的sha256哈希结果；
                                                        为0x00表示输入数据pucDataInput为待签名数据原文。
	InputData		    输入,用于存放外部输入的数据，当ucHashFlag等于0x01时，内容为待签名数据的sha256哈希结果；
                                                        当ucHashFlag等于0x00时，内容为待签名数据原文.
	InputLength		    输入,输入的数据长度，当输入内容为sha256哈希结果时为32；当输入内容为签名原文时最大取值2048.
	Signature		    输出,用于存放输出的签名值数据.
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_ECC_Sign(SGD_UINT32 KeyIndex, SGD_UINT32 HashFlag, SGD_UCHAR *InputData, SGD_UINT32 InputLength, SGD_UCHAR *Signature);	

//-------------------------------------------------
/*
ECC验签
描述:使用内部ECC公钥对ECC签名值进行验证运算
参数:
	KeyIndex			输入,ECC密钥索引值，取值0x01~0x10.需保证索引值对应位置已存在密钥.
	HashFlag			输入,Hash标志，取值0x01或0x00; 为0x01表示输入数据pucDataInput为待签名数据的sha256哈希结果；
                                                        为0x00表示输入数据pucDataInput为待签名数据原文。
	InputData		    输入,用于存放外部输入的数据，当ucHashFlag等于0x01时，内容为待签名数据的sha256哈希结果；
                                                        当ucHashFlag等于0x00时，内容为待签名数据原文.
	InputLength		    输入,输入的数据长度，当输入内容为sha256哈希结果时为32；当输入内容为签名原文时最大取值2048..
	Signature		    输入,用于存放输入的签名值数据.
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_ECC_Verify(SGD_UINT32 KeyIndex, SGD_UCHAR HashFlag, SGD_UCHAR *InputData, SGD_UINT32 InputLength, SGD_UCHAR *Signature);


/*
生成RSA密钥对
描述:
    用于生成 RSA密钥对。 
    命令执行时，若指定 KID 的密钥对存在，则生成的密钥对内容将覆盖已存在密钥对的值。
参数:
    type                输入，密钥类型，取值：0x01 = RSA1024密钥，0x02 = RSA2048密钥，
	KeyIndex			输入,指定产生RSA密钥对的密钥索引,取值范围1~16。 
返回值:
	返回0成功,其他值见错误码.
*/
SGD_RV hs_GenerateRSAKeyPair(SGD_UINT32 type, SGD_UINT32 KeyIndex);

//-------------------------------------------------
/*
RSA加密
参数:
    type                输入，密钥类型，取值：0x01 = RSA1024密钥，0x02 = RSA2048密钥，
	KeyIndex			输入,RSA密钥索引值.取值0x01~0x10.需保证索引值对应位置已存在密钥.
	Data				输入,要加密的数据，必须为16字节整数倍，长度范围16-1024（十进制）字节。
	DataLength		    输入,要加密的数据的长度
	EncData			    输出,加密后的数据.
    EncDataLength		输出,加密后的数据长度
返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_RSA_Encrypt(SGD_UINT32 type, SGD_UINT32 KeyIndex, SGD_UCHAR *Data, SGD_UINT32 DataLength, SGD_UCHAR *EncData, SGD_UINT32 *EncDataLength);

//-------------------------------------------------
/*
RSA解密
参数:
	type                输入，密钥类型，取值：0x01 = RSA1024密钥，0x02 = RSA2048密钥，
	KeyIndex			输入,RSA密钥索引值.取值0x01~0x10.需保证索引值对应位置已存在密钥.
	EncData			    输入,要解密的数据
    EncDataLength		输入,要解密的数据长度
	DecData				输出,解密后的数据
	DecDataLength		输出,解密后的数据长度.

返回值:
	 返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_RSA_Decrypt(SGD_UINT32 type, SGD_UINT32 KeyIndex, SGD_UCHAR *EncData, SGD_UINT32 EncDataLength, SGD_UCHAR *DecData, SGD_UINT32 *DecDataLength);
	
//-------------------------------------------------
/*
RSA签名
描述:使用内部RSA私钥对数据进行签名运算
参数:
    type                输入，密钥类型，取值：0x01 = RSA1024密钥，0x02 = RSA2048密钥，
	KeyIndex			输入,RSA密钥索引值，取值0x01~0x10.需保证索引值对应位置已存在密钥.
	InputData		    输入,用于存放外部输入的数据
	InputLength		    输入,输入的数据长度
	Signature		    输出,用于存放输出的签名值数据.
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_RSA_Sign(SGD_UINT32 type, SGD_UINT32 KeyIndex, SGD_UCHAR *InputData, SGD_UINT32 InputLength, SGD_UCHAR *Signature);	

//-------------------------------------------------
/*
RSA验签
描述:使用内部RSA公钥对RSA签名值进行验证运算
参数:
    type                输入，密钥类型，取值：0x01 = RSA1024密钥，0x02 = RSA2048密钥，
	KeyIndex			输入,RSA密钥索引值，取值0x01~0x10.需保证索引值对应位置已存在密钥.
	hashData		    输入,用于哈希数据
	hashLength		    输入,输入的哈希长度
	Signature		    输入,用于存放输入的签名值数据.
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_RSA_Verify(SGD_UINT32 type, SGD_UINT32 KeyIndex, SGD_UCHAR *hashData, SGD_UINT32 hashLength, SGD_UCHAR *Signature);


//-------------------------------------------------
/*
获取安全存储空间大小
描述:
    获取安全存储空间大小
参数:
    Len			    输出，安全存储空间大小

返回值:
	返回0成功,其他值见错误码.
*/
//-------------------------------------------------
SGD_RV  hs_user_info_size( SGD_UINT32 *Len);

//-------------------------------------------------
/*
写用户信息命令
描述:
     COS预留1024字节空间，供用户保存自定义信息。此命令用于写入用户信息。
        
参数:
    offset          输入，偏移字节
    Len			    输入，要写入的命令数据长度
	data	        输入，要写入的命令数据

返回值:
	返回0成功,其他值见错误码.
*/
//-------------------------------------------------
SGD_RV  hs_Write_user_info(SGD_UINT32 offset, SGD_UINT32 Len, SGD_UCHAR *data);

//-------------------------------------------------
/*
读用户信息命令
描述:
     此命令用于从 COS 预留空间中读取用户写入的信息。
        
参数:
    offset          输入，偏移字节
    Len			    输入，要读取的命令数据长度，当Len=00时，读取指定偏移到结束位置的全部内容
	data	        输出，存放读取的命令数据

返回值:
	返回0成功,其他值见错误码.
*/
//-------------------------------------------------
SGD_RV  hs_Read_user_info(SGD_UINT32 offset, SGD_UINT32 Len, SGD_UCHAR *data);



//-------------------------------------------------
//----------------hash运算----------------------
//-------------------------------------------------
//-------------------------------------------------
/*
hash运算初始化
描述:三步式数据杂凑运算第一步
参数:
	type 输入，hash算法类型，取值为：0x00表示SM3，
                                    0x01表示SHA1，
                                    0x02表示SHA224，
                                    0x03表示SHA256
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_hash_start(SGD_UINT32 type);

//-------------------------------------------------
/*
hash运算
描述:三步式数据杂凑运算第二步,对输入的明文进行杂凑运算.
参数:
	input				输入,缓冲区指针,用于存放输入的数据明文.
	Len		            输入,输入的数据明文长度,最大支持0x800
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_hash_update(SGD_UCHAR *input, SGD_UINT32 Len);
	
//-------------------------------------------------  
/*
hash运算结束
描述:三步式数据杂凑运算第三步,杂凑运算结束返回杂凑数据并清除中间数据
参数:
    output				输出,用于存放输出的结果
	Len		            输出,存放输出的结果长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_hash_finish(SGD_UCHAR *output, SGD_UINT32 *len);
//-------------------------------------------------
//-------------------------------------------------
//-------------------------------------------------


//-------------------------------------------------
//-------------------hmac运算-----------------------
//-------------------------------------------------
//-------------------------------------------------
/*
hmac运算初始化,设置密钥
描述:hmac运算初始化，传入密钥，默认为算法为sha256
参数:
	key				输入,需要传入外部密钥,不能超过64字节
    key_len				输入,传入外部密钥的长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_hmac_set_key(SGD_UCHAR *key, SGD_UINT32 key_len);

//-------------------------------------------------
/*
hmac运算
描述:hmac运算
参数:
	input				输入,用于存放输入的数据
	input_Len		    输入,输入的数据长度,最大支持0x800
    output				输出,用于存放计算的结果
	output_Len		    输出,计算的结果长度
返回值:
	返回0成功,非0表示失败
*/
//-------------------------------------------------
SGD_RV hs_hmac_calc(SGD_UCHAR *input, SGD_UINT32 input_Len, SGD_UCHAR *output, SGD_UINT32 *output_Len);

//-------------------------------------------------
//-------------------------------------------------
//-------------------------------------------------

  
  
#endif

